{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dokumente\\\\Sonstige\\\\2048\\\\2048\\\\ui\\\\src\\\\App.js\";\nimport React from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport './index.css';\nconst gameBoardStyle = {\n  width: '400px',\n  height: '400px',\n  tableLayout: 'fixed',\n  background: 'pink'\n};\nconst cellStyle = {\n  width: '100px',\n  height: '100px',\n  border: '2px solid black',\n  textAlign: 'center',\n  fontSize: '50px'\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.createGameboard = board => {\n      let gameboard = []; // Outer loop to create parent\n\n      for (let i = 0; i < board.length; i++) {\n        let children = []; //Inner loop to create children\n\n        for (let j = 0; j < board[i].length; j++) {\n          children.push(React.createElement(\"td\", {\n            style: cellStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, board[i][j]));\n        } //Create the parent and add the children\n\n\n        gameboard.push(React.createElement(\"tr\", {\n          style: cellStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, children));\n      }\n\n      return gameboard;\n    };\n\n    this.executeKey = key => {\n      console.log(\"do something upon keydown event of \".concat(key));\n      return fetch('http://127.0.0.1:5000/execute_key', {\n        method: 'POST',\n        headers: {\n          'Access-Control-Allow-Methods': 'POST',\n          'Access-Control-Allow-Headers': 'Authorization, Content-Type',\n          'Access-Control-Allow-Origin': \"*\",\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"gameboard\": this.state.board,\n          \"key\": key\n        })\n      }).then(response => response.json()).then(data => this.state.board(data));\n    };\n\n    this.state = {\n      board: [[0, 0, 2, 0], [0, 1, 0, 0], [0, 1, 0, 0], [1, 0, 0, 0]]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"2048\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"2048\")), React.createElement(\"div\", {\n      onKeyPress: event => this.add(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(KeyboardEventHandler, {\n      handleKeys: ['a', 'b', 'c'],\n      onKeyEvent: (key, e) => this.executeKey(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      style: gameBoardStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.createGameboard(this.state.board)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Dokumente\\Sonstige\\2048\\2048\\ui\\src\\App.js"],"names":["React","KeyboardEventHandler","gameBoardStyle","width","height","tableLayout","background","cellStyle","border","textAlign","fontSize","App","Component","constructor","createGameboard","board","gameboard","i","length","children","j","push","executeKey","key","console","log","fetch","method","headers","body","JSON","stringify","state","then","response","json","data","render","event","add","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport './index.css';\r\n\r\nconst gameBoardStyle = {\r\n    width: '400px',\r\n    height: '400px',\r\n    tableLayout: 'fixed',\r\n    background: 'pink',\r\n};\r\nconst cellStyle = {\r\n    width: '100px',\r\n    height: '100px',\r\n    border: '2px solid black',\r\n    textAlign: 'center',\r\n    fontSize: '50px',\r\n};\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            board: [[0, 0, 2, 0], [0, 1, 0, 0], [0, 1, 0, 0], [1, 0, 0, 0]]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"2048\">\r\n                    <h1 className=\"App-title\">2048</h1>\r\n                </header>\r\n                <div onKeyPress={(event) => this.add(event)}>\r\n                    <KeyboardEventHandler\r\n                        handleKeys={['a', 'b', 'c']}\r\n                        onKeyEvent={(key, e) => this.executeKey(key)} />\r\n                    <table style={gameBoardStyle}>\r\n                    <tbody>\r\n                        {this.createGameboard(this.state.board)}\r\n                    </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    createGameboard = (board) => {\r\n        let gameboard = []\r\n        // Outer loop to create parent\r\n        for (let i = 0; i < board.length; i++) {\r\n            let children = []\r\n            //Inner loop to create children\r\n            for (let j = 0; j < board[i].length; j++) {\r\n                children.push(<td style={cellStyle}>{board[i][j]}</td>)\r\n            }\r\n            //Create the parent and add the children\r\n            gameboard.push(<tr style={cellStyle}>{children}</tr>)\r\n        }\r\n        return gameboard\r\n    }\r\n\r\n    executeKey = (key) => {\r\n        console.log(`do something upon keydown event of ${key}`)\r\n        return fetch('http://127.0.0.1:5000/execute_key', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Access-Control-Allow-Methods': 'POST',\r\n                'Access-Control-Allow-Headers': 'Authorization, Content-Type',\r\n                'Access-Control-Allow-Origin': \"*\",\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"gameboard\": this.state.board,\r\n                \"key\": key,\r\n            })\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => this.state.board(data));\r\n    };\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}